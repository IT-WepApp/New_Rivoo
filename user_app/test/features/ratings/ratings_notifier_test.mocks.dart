// Mocks generated by Mockito 5.4.5 from annotations
// in user_app/test/features/ratings/ratings_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_riverpod/flutter_riverpod.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:state_notifier/state_notifier.dart' as _i5;
import 'package:user_app/features/ratings/application/ratings_notifier.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRatingsState_0 extends _i1.SmartFake implements _i2.RatingsState {
  _FakeRatingsState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RatingsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockRatingsNotifier extends _i1.Mock implements _i2.RatingsNotifier {
  MockRatingsNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set onError(_i3.ErrorListener? _onError) => super.noSuchMethod(
        Invocation.setter(
          #onError,
          _onError,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
      ) as bool);

  @override
  _i4.Stream<_i2.RatingsState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i4.Stream<_i2.RatingsState>.empty(),
      ) as _i4.Stream<_i2.RatingsState>);

  @override
  _i2.RatingsState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeRatingsState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.RatingsState);

  @override
  set state(_i2.RatingsState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.RatingsState get debugState => (super.noSuchMethod(
        Invocation.getter(#debugState),
        returnValue: _FakeRatingsState_0(
          this,
          Invocation.getter(#debugState),
        ),
      ) as _i2.RatingsState);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<void> loadRatings(String? productId) => (super.noSuchMethod(
        Invocation.method(
          #loadRatings,
          [productId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> addRating(dynamic rating) => (super.noSuchMethod(
        Invocation.method(
          #addRating,
          [rating],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateRating(dynamic rating) => (super.noSuchMethod(
        Invocation.method(
          #updateRating,
          [rating],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteRating(String? ratingId) => (super.noSuchMethod(
        Invocation.method(
          #deleteRating,
          [ratingId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  bool updateShouldNotify(
    _i2.RatingsState? old,
    _i2.RatingsState? current,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            old,
            current,
          ],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i3.RemoveListener addListener(
    _i5.Listener<_i2.RatingsState>? listener, {
    bool? fireImmediately = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
          {#fireImmediately: fireImmediately},
        ),
        returnValue: () {},
      ) as _i3.RemoveListener);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
