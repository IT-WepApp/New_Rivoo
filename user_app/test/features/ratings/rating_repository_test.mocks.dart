// Mocks generated by Mockito 5.4.5 from annotations
// in user_app/test/features/ratings/rating_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:user_app/features/ratings/data/datasources/rating_datasource.dart'
    as _i2;
import 'package:user_app/features/ratings/domain/entities/rating.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRatingSummary_0 extends _i1.SmartFake implements _i2.RatingSummary {
  _FakeRatingSummary_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRating_1 extends _i1.SmartFake implements _i3.Rating {
  _FakeRating_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RatingRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRatingRemoteDataSource extends _i1.Mock
    implements _i2.RatingRemoteDataSource {
  MockRatingRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i3.Rating>> getRatings(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRatings,
          [productId],
        ),
        returnValue: _i4.Future<List<_i3.Rating>>.value(<_i3.Rating>[]),
      ) as _i4.Future<List<_i3.Rating>>);

  @override
  _i4.Future<_i2.RatingSummary> getRatingSummary(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRatingSummary,
          [productId],
        ),
        returnValue: _i4.Future<_i2.RatingSummary>.value(_FakeRatingSummary_0(
          this,
          Invocation.method(
            #getRatingSummary,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.RatingSummary>);

  @override
  _i4.Future<_i3.Rating> addRating(_i3.Rating? rating) => (super.noSuchMethod(
        Invocation.method(
          #addRating,
          [rating],
        ),
        returnValue: _i4.Future<_i3.Rating>.value(_FakeRating_1(
          this,
          Invocation.method(
            #addRating,
            [rating],
          ),
        )),
      ) as _i4.Future<_i3.Rating>);

  @override
  _i4.Future<_i3.Rating> updateRating(_i3.Rating? rating) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRating,
          [rating],
        ),
        returnValue: _i4.Future<_i3.Rating>.value(_FakeRating_1(
          this,
          Invocation.method(
            #updateRating,
            [rating],
          ),
        )),
      ) as _i4.Future<_i3.Rating>);

  @override
  _i4.Future<bool> deleteRating(String? ratingId) => (super.noSuchMethod(
        Invocation.method(
          #deleteRating,
          [ratingId],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [RatingLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRatingLocalDataSource extends _i1.Mock
    implements _i2.RatingLocalDataSource {
  MockRatingLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i3.Rating>> getCachedRatings(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedRatings,
          [productId],
        ),
        returnValue: _i4.Future<List<_i3.Rating>>.value(<_i3.Rating>[]),
      ) as _i4.Future<List<_i3.Rating>>);

  @override
  _i4.Future<void> cacheRatings(
    String? productId,
    List<_i3.Rating>? ratings,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheRatings,
          [
            productId,
            ratings,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.RatingSummary> getCachedRatingSummary(String? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedRatingSummary,
          [productId],
        ),
        returnValue: _i4.Future<_i2.RatingSummary>.value(_FakeRatingSummary_0(
          this,
          Invocation.method(
            #getCachedRatingSummary,
            [productId],
          ),
        )),
      ) as _i4.Future<_i2.RatingSummary>);

  @override
  _i4.Future<void> cacheRatingSummary(
    String? productId,
    _i2.RatingSummary? summary,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheRatingSummary,
          [
            productId,
            summary,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
