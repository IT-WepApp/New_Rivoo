// Mocks generated by Mockito 5.4.5 from annotations
// in user_app/test/features/cart/domain/usecases/cart_usecases_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:user_app/core/architecture/domain/entity.dart' as _i7;
import 'package:user_app/core/architecture/domain/failure.dart' as _i5;
import 'package:user_app/features/cart/domain/entities/cart_item.dart' as _i6;
import 'package:user_app/features/cart/domain/repositories/cart_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CartRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartRepository extends _i1.Mock implements _i3.CartRepository {
  MockCartRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.CartItem>>> getCartItems() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCartItems,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.CartItem>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.CartItem>>(
          this,
          Invocation.method(
            #getCartItems,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.CartItem>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> addItem(
    _i7.Entity? product, {
    int? quantity = 1,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addItem,
          [product],
          {#quantity: quantity},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #addItem,
            [product],
            {#quantity: quantity},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> removeItem(
          String? cartItemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeItem,
          [cartItemId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #removeItem,
            [cartItemId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> updateQuantity(
    String? cartItemId,
    int? newQuantity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateQuantity,
          [
            cartItemId,
            newQuantity,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #updateQuantity,
            [
              cartItemId,
              newQuantity,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> incrementQuantity(
          String? cartItemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementQuantity,
          [cartItemId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #incrementQuantity,
            [cartItemId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> decrementQuantity(
          String? cartItemId) =>
      (super.noSuchMethod(
        Invocation.method(
          #decrementQuantity,
          [cartItemId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #decrementQuantity,
            [cartItemId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> clearCart() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearCart,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #clearCart,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> getTotalItems() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalItems,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #getTotalItems,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, double>> getTotalPrice() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTotalPrice,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, double>>.value(
            _FakeEither_0<_i5.Failure, double>(
          this,
          Invocation.method(
            #getTotalPrice,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, double>>);
}
