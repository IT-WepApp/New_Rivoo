name: Flutter CI/CD

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  analyze_and_test:
    name: Analyze and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./user_app
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Analyze project source
        run: flutter analyze
      
      - name: Run unit tests with coverage
        run: flutter test --coverage
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./user_app/coverage/lcov.info
          fail_ci_if_error: false
      
      - name: Run integration tests
        run: flutter test integration_test

  build_android:
    name: Build Android
    needs: analyze_and_test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./user_app
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build APK (Debug)
        run: flutter build apk --debug
      
      - name: Build APK (Release)
        run: flutter build apk --release
      
      - name: Build App Bundle
        run: flutter build appbundle
      
      - name: Upload APK artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android-build
          path: |
            ./user_app/build/app/outputs/flutter-apk/app-debug.apk
            ./user_app/build/app/outputs/flutter-apk/app-release.apk
            ./user_app/build/app/outputs/bundle/release/app-release.aab
      
      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
          groups: testers
          file: ./user_app/build/app/outputs/flutter-apk/app-release.apk
          releaseNotes: |
            Changes in this build:
            - Enhanced security with secure storage
            - Improved performance
            - Added new features
            - Bug fixes

  build_ios:
    name: Build iOS
    needs: analyze_and_test
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./user_app
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build iOS (Debug)
        run: flutter build ios --debug --no-codesign
      
      - name: Build iOS (Release)
        run: flutter build ios --release --no-codesign
      
      - name: Upload Crashlytics symbols
        run: |
          echo "Uploading dSYM files to Firebase Crashlytics"
          # This would be implemented with the Firebase Crashlytics CLI
      
      - name: Archive iOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: ./user_app/build/ios/iphoneos

  deploy_github_release:
    name: Deploy GitHub Release
    needs: [build_android, build_ios]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download Android artifacts
        uses: actions/download-artifact@v3
        with:
          name: android-build
          path: android-build
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            android-build/app-release.apk
            android-build/app-release.aab
          body_path: ./user_app/distribution/whatsnew/en-US.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Notify Team
    needs: [build_android, build_ios]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Send Slack notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
